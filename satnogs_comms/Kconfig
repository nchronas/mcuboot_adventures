###############################################################################
#  SatNOGS-COMMS MCU software
#
#  Copyright (C) 2022, Libre Space Foundation <http://libre.space>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  SPDX-License-Identifier: GNU General Public License v3.0 or later
###############################################################################

if BOARD_SATNOGS_COMMS

config CAN1_ISOTP_TX_ADDR
    hex "ISOTP identifier for the CAN1 TX interface"
    default 0x1
    help
       This is the address that will be used for ISOTP frames
       that are transmitted from the CAN1 interface

config CAN1_ISOTP_RX_ADDR
    hex "ISOTP identifier for the CAN1 RX interface"
    default 0x2
    help
       This is the address that will be used for ISOTP FC frames
       that are transmitted from the CAN1 interface when ISOTP frames
       are received

config CAN1_ISOTP_REMOTE_PEER_TX_ADDR
    hex "ISOTP remote identifier used for TX frames for the CAN1"
    default 0x11

config CAN1_ISOTP_REMOTE_PEER_RX_ADDR
    hex "ISOTP identifier for the CAN1 RX interface"
    default 0x12

config MAX_MTU
    int "Maximum MTU size of all communication interfaces (CAN-ISOTP, RF, SPI)"
    default 1024

config RX_MSGQ_SIZE
    int "The number of messages the RX message queue can hold"
    default 4
    help
       All communication interfaces submit their messages to this queue.
       Consider your workload when assigning a value.

config CAN1_TX_MSGQ_SIZE
    int "The number of messages the CAN1 message queue can hold"
    default 2

config MSG_ARBITER_STACK_SIZE
    int "Stack size of the message arbiter thread"
    default 2048
    help
      This thread handles quite complex routines with deep call stack.
      Consider a high stack size value

config MSG_ARBITER_PRIO
    int "Priority of the message arbiter thread"
    default 5

config CAN1_THREAD_STACK_SIZE
    int "Stack size of the CAN1 thread"
    default 512

config CAN1_THREAD_PRIO
    int "Priority of the CAN1 thread"
    default 4

config MAIN_WORKQUEUE_STACK_SIZE
    int "Stack size of the main workqueue thread"
    default 256

config MAIN_WORKQUEUE_PRIO
    int "Priority of the main workqueue thread"
    default 5

config ASYNC_WORKQUEUE_STACK_SIZE
    int "Stack size of the workqueue thread used for async work items submission"
    default 1024

config ASYNC_WORKQUEUE_PRIO
    int "Priority of the main workqueue thread used for async work items submission"
    default 6

config TELEMETRY_THREAD_STACK_SIZE
    int "Stack size of the telemetry thread"
    default 1024

config TELEMETRY_THREAD_PRIO
    int "Priority of of the telemetry thread"
    default 3

config ENABLE_I2C_REVOVERY
    bool "Enable the I2C bus recovery mechanism"
    default y

config I2C_RECOVERY_RETRIES
    int "How many times to execute the bus recovery mechanism, until an error is raised"
    default 3
    range 1 1024

config ENABLE_DEBUG_UTILS
    bool "Enable extra debug utilities (e.g SeggerRTT)"
    default n

endif